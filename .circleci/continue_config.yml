version: 2.1

orbs:
  slack: circleci/slack@4.12.0

# the default pipeline parameters, which will be updated according to
# the results of the path-filtering orb
parameters:
  check_backend:
    type: boolean
    default: false
  check_frontend:
    type: boolean
    default: false

jobs:
  say-backend:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run:
          name: "Say hello backend"
          command: "echo <<pipeline.parameters.check_backend>>"

  say-frontend:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run:
          name: "Say hello frontend"
          command: "echo <<pipeline.parameters.check_frontend>>"
  
  deploy-main-branch:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run:
          name: "Say hello main branch"
          command: "echo HEllo , Vinay!"
      - run:
          name: "check paramters"
          command: |
            "echo <<pipeline.parameters.check_backend>>"
            "echo <<pipeline.parameters.check_frontend>>"
  
# here we specify our workflows, most of which are conditionally
# executed based upon pipeline parameter values. Each workflow calls a
# specific job defined above, in the jobs section.
workflows:
  # when pipeline parameter, run-build-service-1-job is true, the
  # build-service-1 job is triggered.
  TEST_BACKEND:
    when: <<pipeline.parameters.check_backend>>
    jobs:
      - say-backend
  Test_FRONTEND:
    when: <<pipeline.parameters.check_frontend>>
    jobs:
      - say-frontend
  Deploy:
    jobs:
      - deploy-main-branch:
          filters:
              branches:
                only: main
  # Backend:
  #   when: << pipeline.parameters.run-backend >>
  #   jobs:
  #     - say-backend

  # # when pipeline parameter, run-build-service-2-job is true, the
  # # build-service-2 job is triggered.
  # Frontend:
  #   when: << pipeline.parameters.run-frontend >>
  #   jobs:
  #     - say-frontend

  # when pipeline parameter, run-build-service-1-job OR
  # run-build-service-2-job is true, run-integration-tests job is
  # triggered. see:
  # https://circleci.com/docs/configuration-reference/#logic-statements
  # for more information.
  # run-integration-tests:
  #   when:
  #     or: [<< pipeline.parameters.run-build-service-1-job >>, << pipeline.parameters.run-build-service-2-job >>]
  #   jobs:
  #     - maven/test:
  #         name: run-integration-tests
  #         command: '-X verify'
  #         app_src_directory: 'tests'
