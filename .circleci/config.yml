# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
orbs:
  slack: circleci/slack@4.4.4
# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"
  
  get_branch:

    docker:
      - image: cimg/base:stable
    
    steps:
      - checkout
      - run:
          name: "print branch"
          command: | 
            git subtree split --prefix backend main
            git subtree split --prefix backend <<pipeline.git.branch>>


  test_cases_run:
    docker:
      - image: cimg/python:3.10.9
    steps:
      - checkout
      - run:
          name: Installing dependencies
          command: |
            python3 --version
            python3.10 -m venv venv
            . venv/bin/activate
            cd backend/
            pip3 install -r requirements.txt

      - run:
          name: Running migrations
          command: |
            . venv/bin/activate
            cd backend/
            python manage.py migrate

      - run:
          name: Running tests
          command: |
            . venv/bin/activate
            cd backend/
            python manage.py test
      - store_test_results:
          path: test-results
      - slack/notify:
          event: fail
          channel: $SLACK_CHANNEL
          template: basic_fail1

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  experimenting_with_things:
    when:
      not:
        equal: [1,0]
    jobs:
      - say-hello
  then_do_this:
    jobs:
      - get_branch
      - test_cases_run:
          context: slack-secrets
